@model IEnumerable<Product>
@using DevSkill.Inventory.Domain.Entities
@{
    ViewData["Title"] = "Items";
    var newItemId = ViewBag.NewItemId as Guid?;
}

<div class="content-wrapper">
    <div class="row">
        <!-- Sidebar -->
        <aside class="col-md-3" style="position: sticky; top: 0; height: 100vh;">
            <div class="card" style="height: 100vh;">
                <div class="card-body" style="overflow-y: auto;">
                    <form class="search-container">
                        <div class="form-group">
                            <div class="input-group">
                                <div class="input-group-append">
                                    <span class="input-group-text" id="search-icon">
                                        <i class="fas fa-search"></i>
                                    </span>
                                </div>
                                <input type="text" class="form-control" id="folderSearch" placeholder="Search tags" aria-label="Search tags">
                                <div class="input-group-append" id="clear-button" style="cursor: pointer; display: none;">
                                    <span class="input-group-text">
                                        <i class="fas fa-times"></i>
                                    </span>
                                </div>
                            </div>
                            <div class="header-border mb-4"></div>

                            <div id="searchTagsContainer" class="form-group">
                                <!-- Serialized tags will be appended here dynamically -->
                            </div>
                        </div>
                    </form>
                </div>
            </div>
        </aside>

        <!-- Main Content -->
        <div class="col-md-9">
            <div class="fixed-header">
                <div class="d-flex justify-content-between align-items-center mb-4" style="margin-top: 30px;">
                    <h1 class="items-title">Tags</h1>
                </div>
                <div class="header-border mb-4"></div>
                <partial name="_ResponsePartial"></partial>
            </div>

            <!-- Div for Selected Items -->
            <div id="selectedItemsDiv" class="selected-items" style="display: none; margin-bottom: 10px;">
                <div class="d-flex align-items-center">
                    <span id="selectedItemsText">0 items selected</span>
                    <div class="dropdown" style="padding-left: 3px;">
                        <button class="btn dropdown-toggle" type="button" id="dropdownMenuButton" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false"></button>
                        <div class="dropdown-menu" aria-labelledby="dropdownMenuButton" style="padding: 2px;">
                            <a class="dropdown-item" href="#" id="selectAllItems">All</a>
                            <a class="dropdown-item" href="#" id="clearSelection">Clear Selection</a>
                        </div>
                    </div>
                    <div class="ml-auto">
                        <button type="button" class="btn btn-danger btn-sm show-bs-modal" data-id='${data}' value='${data}'>
                            <i class="fas fa-trash"></i> Delete
                        </button>
                        <partial name="_ModalPartial"></partial>
                    </div>
                </div>
            </div>

            <!-- Search Bar and Value Fields -->
            <div class="search-and-values" style="margin-bottom: 20px; padding-right: 15px; text-align: left;">
                <form id="searchForm">
                    <div class="input-group" style="max-width: 300px;">
                        <input type="text" class="form-control" id="searchAllItems" placeholder="Search All Items" aria-label="Search All Items" style="padding-left: 10px; border-bottom: none;">
                    </div>
                </form>
                <!-- Closer Value Fields -->
                <div class="value-fields" style="padding: 10px 0;">
                    <div class="row" style="margin: 0;">
                        <div class="col-md-3 no-padding">
                            <strong>Folders:</strong> <span id="folderCount">0</span>
                        </div>
                        <div class="col-md-3 no-padding">
                            <strong>Items:</strong> <span id="itemCount">@ViewBag.ItemCount</span>
                        </div>
                        <div class="col-md-3 no-padding">
                            <strong>Total Quantity:</strong> <span id="totalQuantity">@ViewBag.TotalQuantity</span>
                        </div>
                        <div class="col-md-3 no-padding">
                            <strong>Total Value:</strong> <span id="totalValue">@ViewBag.TotalValue, $</span>
                        </div>
                    </div>
                </div>
            </div>
            <div id="products" class="row" style="margin: 0;">
                @if (Model != null && Model.Any())
                {
                    @foreach (var item in Model)
                    {
                        <!-- Begin merged _ItemBoxPartial content -->
                        <div class="col-md-4 d-flex justify-content-center">
                            <a asp-area="Admin" asp-controller="Product" asp-action="Update" asp-route-id="@item.Id" class="card item-box @(ViewBag.IsNewItem == true ? "new-item-highlight" : "")">
                                <span class="item-serial"></span>
                                <img src="@item.Image" alt="@item.Title" class="card-img-top" />
                                <h5 class="card-title">@item.Title</h5>
                                <div class="card-body">
                                    <!-- Second Line: Quantity and Price -->
                                    <div class="item-info">
                                        <span class="item-quantity">Quantity: @item.Quantity</span>
                                        <span class="divider">|</span>
                                        <span class="item-price">Price: @item.Price, $</span>
                                    </div>

                                    <!-- Third Line: Tag Icon and Tag -->
                                    <div class="item-tag">
                                        <i class="fas fa-tag card-tag"></i> @item.Tags
                                        <span class="divider">|</span>
                                        <span class="item-price" id="totalValue">Total: @item.TotalValue,$</span>
                                    </div>
                                </div>
                                <input type="checkbox" class="checkbox-delete" id="deleteCheckbox" value="@item.Id" />
                            </a>
                        </div>
                    }
                }
                else
                {
                    <p>No items available now.</p>
                }
            </div>
        </div>
    </div>
</div>


<script>
    document.addEventListener("DOMContentLoaded", function () {
    const folderSearch = document.getElementById('folderSearch');
    const items = document.querySelectorAll('.item-box');
    const itemCountField = document.getElementById('itemCount'); 
    const totalQuantityField = document.getElementById('totalQuantity');
    const totalValueField = document.getElementById('totalValue');

    // Form submission when Enter key is pressed
    folderSearch.addEventListener('keydown', function (event) {
        if (event.key === 'Enter') {
            event.preventDefault();
        }
    });

    folderSearch.addEventListener('input', function () {
        const searchValue = folderSearch.value.toLowerCase();
        let visibleItemCount = 0;
        let totalQuantity = 0;
        let totalValue = 0;

        items.forEach(function (item) {
            const tags = item.querySelector('.card-tag').textContent.toLowerCase(); 
            const title = item.querySelector('.card-title').textContent.toLowerCase(); 

            // Check if title or tags include the search value
            if (tags.includes(searchValue) || title.includes(searchValue)) {
                item.style.display = 'flex';
                item.style.margin = '0px 45px 20px 40px';
                visibleItemCount++;

                const itemQuantity = parseInt(item.querySelector('.item-quantity').textContent.replace('Quantity: ', '')) || 0;
                const itemPrice = parseFloat(item.querySelector('.item-price').textContent.replace('Price: ', '').replace('$', '')) || 0;
                const itemTotalValue = itemQuantity * itemPrice;

                totalQuantity += itemQuantity;
                totalValue += itemTotalValue;
            } else {
                item.style.display = 'none';
            }
        });

        // After filtering, reflow the visible items
        const filteredItems = Array.from(items).filter(item => item.style.display === 'flex');

        const productsContainer = document.getElementById('products');
        productsContainer.innerHTML = '';
        filteredItems.forEach(item => productsContainer.appendChild(item));

        // Update countable fields
        itemCountField.textContent = visibleItemCount;
        totalQuantityField.textContent = totalQuantity;
        totalValueField.textContent = totalValue.toFixed(2) + ' $';
    });
});

</script>

